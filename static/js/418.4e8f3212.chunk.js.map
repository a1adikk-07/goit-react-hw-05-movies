{"version":3,"file":"static/js/418.4e8f3212.chunk.js","mappings":"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","sources":["api/movie.js","webpack://react-homework-template/./src/components/MoviesSearch/MoviesSearchList/movies-search-list.module.css?4793","components/MoviesSearch/MoviesSearchList/MoviesSearchList.jsx","../node_modules/nanoid/url-alphabet/index.js","webpack://react-homework-template/./src/components/MoviesSearch/MoviesSearchForm/movies-search-form.module.css?50cb","components/MoviesSearch/MoviesSearchForm/MoviesSearchForm.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/MoviesSearch/movies-search.module.css?498e","components/MoviesSearch/MoviesSearch.jsx","pages/MovieSearchPage/MovieSearchPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL_TREND = 'https://api.themoviedb.org/3/trending/movie/day';\nconst URL_DETAILS = 'https://api.themoviedb.org/3/movie';\nconst URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\nconst API_KEY = 'e58a02e4215cc04ce0b4af905ce50db3';\n\nexport const getTrendingMovies = () => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    include_adult: false,\n    per_page: '20',\n  });\n  return axios.get(`${URL_TREND}?${params}`);\n};\n\nexport const GetMovieById = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}?${params}`);\n};\n\nexport const getMovieCastById = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}/credits?${params}`);\n};\n\nexport const GetSearching = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  return axios.get(`${URL_DETAILS}/${id}/credits?/${params}`);\n};\n\nexport const getMovieReviewById = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}/reviews?${params}`);\n};\n\nexport const searchMovies = query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    include_adult: false,\n    query: query,\n  });\n  return axios.get(`${URL_SEARCH}?${params}`);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movies-search-list_item__EvUQV\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './movies-search-list.module.css';\n\nconst MoviesSearchList = ({ items }) => {\n  const location = useLocation();\n\n  const elements = items.map(({ id, title }) => (\n    <li key={id} className={styles.item}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return <ul>{elements}</ul>;\n};\n\nexport default MoviesSearchList;\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"movies-search-form_form__soD6i\",\"fieldGroup\":\"movies-search-form_fieldGroup__mB1g5\",\"input\":\"movies-search-form_input__2yKrp\",\"searchbtn\":\"movies-search-form_searchbtn__rTwUX\"};","import { useEffect, useRef, useState, useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport styles from './movies-search-form.module.css';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    search: '',\n  });\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n  };\n  const reset = () => {\n    setState({\n      search: '',\n    });\n  };\n\n  const searchId = useMemo(() => nanoid(), []);\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <div className={styles.fieldGroup}>\n        <label htmlFor={searchId}></label>\n        <input\n          id={searchId}\n          ref={inputRef}\n          value={state.search}\n          onChange={handleChange}\n          required\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Enter search movies\"\n          className={styles.input}\n        />\n      </div>\n      <button type=\"submit\" className={styles.searchbtn}>\n        ðŸ”Ž\n      </button>\n    </form>\n  );\n};\n\nexport default MoviesSearchForm;\n","import { urlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"movies-search_error__9NK3+\",\"loadMoreWrapper\":\"movies-search_loadMoreWrapper__EOBDu\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesSearchForm from './MoviesSearchForm/MoviesSearchForm';\nimport MoviesSearchList from './MoviesSearchList/MoviesSearchList';\nimport { searchMovies } from '../../api/movie';\n\nimport styles from './movies-search.module.css';\n\nconst MoviesSearch = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n  const page = searchParams.get('page');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const { data } = await searchMovies(search, page);\n        setMovies(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (search) {\n      fetchMovies();\n    }\n  }, [search, page]);\n\n  const handleSearch = ({ search }) => {\n    setSearchParams({ search, page: 1 });\n    setMovies([]);\n  };\n\n  const isMovies = Boolean(movies.length);\n  return (\n    <>\n      <MoviesSearchForm onSubmit={handleSearch} />\n      {error && <p className={styles.error}>{error}</p>}\n      {loading && <p>Loading...</p>}\n      {isMovies && <MoviesSearchList items={movies} />}\n    </>\n  );\n};\n\nexport default MoviesSearch;\n","import MoviesSearch from 'components/MoviesSearch/MoviesSearch';\n\nconst MoviesSearchPage = () => {\n  return (\n    <div>\n      <MoviesSearch />\n    </div>\n  );\n};\n\nexport default MoviesSearchPage;\n"],"names":["URL_DETAILS","API_KEY","getTrendingMovies","params","URLSearchParams","api_key","language","page","include_adult","per_page","axios","concat","GetMovieById","id","getMovieCastById","getMovieReviewById","searchMovies","query","_ref","items","location","useLocation","elements","map","_ref2","title","_jsx","className","styles","children","Link","to","state","from","urlAlphabet","onSubmit","_useState","useState","search","_useState2","_slicedToArray","setState","inputRef","useRef","useEffect","current","focus","reset","searchId","useMemo","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array","nanoid","_jsxs","e","preventDefault","_objectSpread","htmlFor","ref","value","onChange","target","name","_defineProperty","required","type","placeholder","movies","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$searchMovies","data","_context","prev","next","sent","results","t0","message","finish","stop","apply","isMovies","Boolean","_Fragment","MoviesSearchForm","MoviesSearchList","MoviesSearch"],"sourceRoot":""}